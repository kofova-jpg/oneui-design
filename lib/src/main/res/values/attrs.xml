<?xml version="1.0" encoding="utf-8"?>
<resources>

    <attr name="roundedCorners" format="integer">
        <flag name="none" value="0x00000000" />
        <flag name="all" value="0x0000000f" />
        <flag name="top_left" value="0x00000001" />
        <flag name="top_right" value="0x00000002" />
        <flag name="bottom_left" value="0x00000004" />
        <flag name="bottom_right" value="0x00000008" />
    </attr>

    <!-- This amount to fill on the top edge of the view with the rounded corner color
    and the inset the top rounded corners, if present, without changing the top padding.-->
    <attr name="edgeInsetTop" type="dimension" />
    <!-- This amount to fill on the right edge of the view with the rounded corner color
    and the inset the right rounded corners, if present, without changing the right padding.-->
    <attr name="edgeInsetRight" type="dimension" />
    <!-- This amount to fill on the left edge of the view with the rounded corner color
    and the inset the left rounded corners, if present, without changing the left padding.-->
    <attr name="edgeInsetLeft" type="dimension" />
    <!-- This amount to fill on the bottom edge of the view with the rounded corner color
    and the inset the bottom rounded corners, if present, without changing the bottom padding.-->
    <attr name="edgeInsetBottom" type="dimension" />

    <declare-styleable name="RoundedCornerView">
        <attr name="roundedCorners" />
        <attr name="roundedCornerColor" />
        <attr name="edgeInsetTop" />
        <attr name="edgeInsetRight" />
        <attr name="edgeInsetLeft" />
        <attr name="edgeInsetBottom" />
        <attr name="drawOverEdge" format="boolean" />
        <!-- When set to true, the border and rounded corners will be inset
        horizontally to the amount of the horizontal padding. This overrides
        the edgeInsetLeft and edgeInsetRight attributes. Default Value: false -->
        <attr name="fillHorizontalPadding" format="boolean" />
    </declare-styleable>

    <declare-styleable name="RelatedCard">
        <attr name="title" />
    </declare-styleable>

    <declare-styleable name="RelativeLinksCard">
        <attr name="title" />
        <attr name="showTopDivider"/>
    </declare-styleable>

    <!-- Custom Preferences -->
    <declare-styleable name="ColorPickerPreference">
        <attr name="showAlphaSlider" format="boolean" />
        <!--Attribute to enable or disable the automatic saving and restoring of recent colors.
        Default Value: true -->
        <attr name="persistRecentColors" format="boolean" />
    </declare-styleable>

    <declare-styleable name="DescriptionPreference">
        <attr name="android:layout" />
        <attr name="roundedCorners" />
        <attr name="positionMode" format="integer">
            <flag name="first_item" value="1" />
            <flag name="normal" value="0" />
            <flag name="subheader_item" value="2" />
        </attr>
    </declare-styleable>

    <declare-styleable name="InsetPreferenceCategory">
        <attr name="height" />
        <attr name="roundedCorners" />
    </declare-styleable>

    <attr name="seekBarPreferenceProStyle" format="reference"/>

    <declare-styleable name="SeekBarPreferencePro">
        <!-- Set seekbar to only put tick marks at the start, center and end.
       The center point is 0.
       This will ignore seekBarMode value and will use level_bar mode instead-->
        <attr name="centerBasedSeekBar"  format="boolean" />
        <attr name="leftLabelName"  format="string" />
        <attr name="overlapPoint" format="integer" />
        <attr name="rightLabelName" format="string"/>
        <attr name="seamlessSeekBar" format="boolean"/>
        <!-- Defaults to level_bar.
         Note: This does not apply when centerBasedSeekBar is true-->
        <attr name="seekBarMode">
            <enum name="standard" value="0" />
            <enum name="expand" value="5" />
            <enum name="level_bar" value="8" />
        </attr>
        <!-- Note: This does not apply when centerBasedSeekBar is true-->
        <attr name="showTickMark" format="boolean" />
        <attr name="units" format="string" />
    </declare-styleable>

    <declare-styleable name="HorizontalRadioPreference">
        <attr name="entriesImage" format="reference" />
        <attr name="entries" />
        <attr name="entriesSubtitle" format="reference" />
        <attr name="entryValues" />
        <attr name="viewType" format="integer">
            <enum name="image" value="0" />
            <enum name="noImage" value="1" />
        </attr>
    </declare-styleable>

    <!-- Custom Layouts -->
    <declare-styleable name="ToolbarLayout">
        <attr name="android:layout" />
        <!--Enable or disable the expanding toolbar. The default is true.-->
        <attr name="expandable" format="boolean" />
        <!--The initial state of the toolbar when `expandable` is true.
        Default is true.-->
        <attr name="expanded" format="boolean" />
        <!--The toolbar's collapsed and expanded title.-->
        <attr name="title" format="string" />
        <!--The toolbar's collapsed and expanded subtitle.-->
        <attr name="subtitle" format="string" />
        <!--Handle system insets and ime insets internally. The default is true -->
        <attr name="handleInsets" format="boolean"/>
        <!--Sets whether the toolbar navigation button should be displayed as a 'back/up' affordance.
         Set this to true if clicking the navigation button returns the user up by a single level in your UI;
         the navigation button will display a back icon, set the tooltip to 'Navigate up', and
         will invoke [OnBackPressedDispatcher.onBackPressed] when clicked.-->
        <attr name="showNavButtonAsBack" format="boolean"/>
        <!--The toolbar's navigation icon when showNavButtonAsBack is false (default).
        Don't forget to also set tooltip programmatically with setNavigationButtonTooltip(CharSequence).-->
        <attr name="navigationIcon" format="reference" />
        <!-- Set to true to show a SeslSwitchBar right below the AppBarLayout. Default is false.-->
        <attr name="showSwitchBar" format="boolean"/>
        <!-- Sets rounded corners around the main content. Default is all.-->
        <attr name="mainRoundedCorners">
            <enum name="all" value="0" />
            <enum name="top" value="1" />
            <enum name="bottom" value="2" />
            <enum name="none" value="3" />
        </attr>
        <!--The dimen value to be set as the inset to the horizontal edges and
         rounded corners of the main content. This doesn't changed horizontal padding.
         Default is 10dp. -->
        <attr format="dimension" name="edgeInsetHorizontal"/>
        <!--Gravity to be set on the toolbar(s).
        This is set to bottom by default.-->
        <attr name="toolbarGravity">
            <!-- Pins the toolbar to the bottom edge-->
            <flag name="bottom" value="0x50" />
            <!-- Pins the toolbar to the top edge. -->
            <flag name="top" value="0x30" />
        </attr>
    </declare-styleable>

    <declare-styleable name="DrawerLayout">
        <!--Enable or disable drawer's predictive back animation.
        This applies only to api34+. This is set to false by default.-->
        <attr name="drawerBackAnimation" format="boolean" />
        <!--For preview purposes only. No effect on runtime-->
        <attr name="isOpen" format="boolean"/>
    </declare-styleable>

    <attr name="drawerBackgroundColor" format="reference|color" />
    <attr name="drawerSelectedBackgroundColor" format="reference|color"/>
    <attr name="drawerHeaderTextAppearance" format="reference" />

    <declare-styleable name="ToolbarLayout_Layout">
        <!--The location of the ToolbarLayout children views.
        This defaults to main_content if not provided.-->
        <attr name="layout_location">
            <!-- The child will be added as the primary content of this layout
            located right below the app bar and will have adaptive margins applied,
            which are managed by the layout.-->
            <enum name="main_content" value="0" />
            <!--Sets this view as the custom title view for the expanded AppBarLayout.
            This is equivalent to invoking the `setCustomTitleView` method.-->
            <enum name="appbar_header" value="1" />
            <!--Adds the view to the bottom of the layout
            ensuring it does not overlap with other content.
            This view will also have adaptive margins applied.-->
            <enum name="footer" value="2" />
            <!--Adds the view as a direct child of the CoordinatorLayout.
            Typically overlaps with the `main_content` view.-->
            <enum name="root" value="3" />
            <!--Sets the view as a custom header row within the drawer panel.
            Serves as the topmost element in the drawer.-->
            <enum name="drawer_header" value="4" />
            <!--Adds the view to inside the drawer panel
             below the `drawer_header`. -->
            <enum name="drawer_panel" value="5" />
            <!--Similar to `root`, but constrained within same side margins
             applied to `main_content`.-->
            <enum name="root_bounded" value="6" />
        </attr>
    </declare-styleable>

    <declare-styleable name="SplashLayout">
        <!--Set the behavior of the splash screen. The default is true.-->
        <attr name="animated" format="boolean" />
        <!--The splash screen's title. If not specified, your App's name will be used.-->
        <attr name="title" />
        <!--The image resource for the static splash screen.-->
        <attr name="image" format="reference|color" />
        <!--The foreground layer resource for the animated splash screen.-->
        <attr name="foreground_image" format="reference|color" />
        <!--The background layer resource for the animated splash screen.-->
        <attr name="background_image" format="reference|color" />
        <!--A custom animation for the animated splash screen-->
        <attr name="animation" format="reference" />
    </declare-styleable>

    <declare-styleable name="SeekBarPlus">
        <!-- Set seekbar to only put tick marks at the start, center and end.
        The center point is 0.
        This will ignore seekBarMode value and will use level_bar mode instead-->
        <attr name="centerBasedBar"  format="boolean" />
        <!-- Allow the thumb to be draggable seamlessly-->
        <attr name="seamless" format="boolean"/>
    </declare-styleable>

    <declare-styleable name="QRImageView">
        <attr name="qrContent" format="string" />
        <attr name="qrSize" format="dimension"/>
        <attr name="qrRoundedFrame" format="boolean"/>
        <attr name="qrIcon" format="reference" />
        <attr name="qrBackgroundColor" format="color" />
        <attr name="qrForegroundColor" format="color" />
        <attr name="qrTintFrame" format="boolean"/>
        <attr name="qrTintAnchor" format="boolean"/>
    </declare-styleable>

    <declare-styleable name="AutoHideIndexScrollView">
        <attr name="groupItems" format="integer" />
        <attr name="otherItems" format="integer" />
        <attr name="textMode" format="boolean" />
        <attr name="autoHide" format="boolean" />
    </declare-styleable>

    <declare-styleable name="TipPopup">
        <attr name="tipPopupBackgroundColor" format="reference|color" />
    </declare-styleable>

    <attr name="showTopDivider" format="boolean" />
    <attr name="userUpdatableSummary" format="boolean"/>
    <attr name="showBottomDivider" format="boolean" />

    <declare-styleable name="CardItemView">
        <attr name="android:enabled"/>
        <attr name="android:clickable"/>
        <attr name="android:focusable"/>
        <attr name="icon" />
        <attr name="iconTint"/>
        <attr name="title" />
        <attr name="titleMaxLines" format="integer" />
        <attr name="summary"/>
        <attr name="summaryMaxLines" format="integer" />
        <!-- If set to true summary will be themed with active color-->
        <attr name="userUpdatableSummary"/>
        <!--Show divider at the top. Default is true-->
        <attr name="showTopDivider" />
        <!--Show divider at the bottom. Default is false-->
        <attr name="showBottomDivider" />
        <!-- Set to true to make top divider extend to cover the icon. False by default-->
        <attr name="fullWidthDivider" format="boolean" />
        <!-- Drawable to set to the end image view -->
        <attr name="drawableEnd" format="reference" />
    </declare-styleable>

    <attr name="bottomNavigationTextStyle" format="reference"/>

    <!--SelectableLinearLayout - designed for actionMode-->
    <declare-styleable name="SelectableLinearLayout">
        <!-- This attribute determines the selection mode appearance:
                - "checkBox" mode (value="0") displays a CheckBox widget when in selection mode.
                - "overlayCircle" mode (value="1") displays a drawable overlay on the specified "targetImage".
                The selection state can be toggled using the setSelected and setSelectedAnimate methods. -->
        <attr name="checkMode">
            <enum name="checkBox" value="0" />
            <enum name="overlayCircle" value="1" />
        </attr>
        <!-- Spacing for checkBox mode  -->
        <attr name="checkableButtonSpacing"  format="dimension" />
        <!-- Reference to the image used for the check overlay in overlayCircle mode.-->
        <attr name="targetImage" format="reference"/>
        <!-- Corner radius to apply to the check overlay when in overlayCircle mode.
        Default value is 50% of the targetImage height.-->
        <attr name="cornerRadius"/>
        <!-- This defines the color used to highlight the selected state. -->
        <attr name="selectedHighlightColor" format="color" />
    </declare-styleable>

    <!--AppInfoLayout-->
    <attr name="appInfoLayoutStyle" format="reference"/>
    <declare-styleable name="AppInfoLayout">
        <attr name="appTitleTextColor" format="color" />
        <attr name="appInfoTextColor" format="color" />
        <attr name="mainButtonStyle" format="reference"/>
        <attr name="bottomButtonsStyle" format="reference"/>
    </declare-styleable>

    <!--OnboardingTipsItemView-->
    <declare-styleable name="OnboardingTipsItemView">
        <attr name="icon" />
        <attr name="title" />
        <attr name="summary"/>
    </declare-styleable>

    <!--BottomTipView-->
    <declare-styleable name="BottomTipView">
        <attr name="title" />
        <attr name="summary"/>
        <attr name="linkText" format="string"/>
    </declare-styleable>

    <declare-styleable name="SuggestionCardPreference">
        <attr name="actionButtonText" format="string"/>
    </declare-styleable>


    <declare-styleable name="BottomTabLayout">
        <attr name="menu" />
        <attr name="minSideMargin" format="dimension"/>
    </declare-styleable>

    <!-- The SeslTimePicker dialog theme. -->
    <attr name="timePickerDialogTheme" format="reference" />

    <!-- The SeslDatePicker dialog theme. -->
    <attr name="datePickerDialogTheme" format="reference" />

    <!--SwitchItemView-->
    <declare-styleable name="SwitchItemView">
        <attr name="title"/>
        <!-- Show divider above. True by default-->
        <attr name="showTopDivider"/>
        <!--Show divider at the bottom. Default is false-->
        <attr name="showBottomDivider" />
        <!-- Makes click and switch change events separate. True by default-->
        <attr name="separateSwitch" format="boolean"/>
        <attr name="summaryOn"/>
        <attr name="summaryOff"/>
        <attr name="switchTextOn"/>/>
        <attr name="switchTextOff"/>
        <attr name="android:enabled"/>
        <attr name="android:clickable"/>
        <attr name="android:focusable"/>
        <attr name="android:checked"/>
        <attr name="userUpdatableSummary"/>
        <attr name="icon" />
        <attr name="iconTint" />
    </declare-styleable>

    <declare-styleable name="RadioItemViewGroup">
        <attr name="checkedButton"/>
    </declare-styleable>

    <attr name="radioItemViewGroupStyle"/>

    <declare-styleable name="RadioItemView">
        <attr name="title"/>
        <!-- Show divider above. True by default-->
        <attr name="showTopDivider"/>
        <attr name="android:enabled"/>
        <attr name="android:checked"/>
    </declare-styleable>

    <declare-styleable name="FloatingActionBar">
        <attr name="button1Label" format="string" />
        <attr name="button2Label" format="string" />
        <attr name="button1Icon" format="reference" />
        <attr name="button2Icon" format="reference" />
        <attr name="selectedIndex" format="integer" />
    </declare-styleable>

</resources>
